name: CI Build

on:
  workflow_dispatch:
  push:
    branches:
      - v4.1

jobs:
  buildtest:
    runs-on: ubuntu-20.04

    env:
      XDEBUG_MODE: coverage
      MYSQL_PASSWORD: root
      POSTGRES_PASSWORD: postgres
      PGHOST: localhost
      PGUSER: postgres

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer:v2
          extensions: gd, xdebug, curl
          coverage: xdebug
      - name: Checkout rcmcarddav
        uses: actions/checkout@v2
      - name: Checkout roundcubemail
        uses: actions/checkout@v2
        with:
          path: roundcubemail
          repository: mstilkerich/roundcubemail
          ref: 'fix_phpdoc_annotations'
      - name: Copy config files
        run: |
          cp -v .github/workflows/ci-cfg/.??* ~/
          chmod 600 ~/.pgpass ~/.mylogin.cnf
      - name: Set up MySQL
        run: |
          sudo systemctl start mysql.service
          echo "CREATE USER 'rcmcarddavtest'@'localhost' IDENTIFIED BY 'rcmcarddavtest';" | mysql -u root
      - name: Set up Postgres
        run: |
          psql --username=postgres -c "create role rcmcarddavtest with login password 'rcmcarddavtest';"
      - name: Install dependencies
        run: composer update --no-interaction --no-progress
      - name: Check code style compliance with PSR12
        run: make stylecheck
      - name: Check code compatibility with minimum supported PHP version
        run: make phpcompatcheck
      - name: Run psalm static analysis
        run: make psalmanalysis
      - name: Check that DB schema resulting from migrations matches initial schema for SQLite
        run: make schematest-sqlite3
      - name: Check that DB schema resulting from migrations matches initial schema for MySQL
        run: make schematest-mysql
      - name: Check that DB schema resulting from migrations matches initial schema for Postgres
        run: make schematest-postgres
      - name: Database interoperability tests for SQLite3
        run: make tests-sqlite3
      - name: Database interoperability tests for MySQL
        run: make tests-mysql
      - name: Database interoperability tests for Postgres
        run: make tests-postgres
      - name: Check test datasets have a description
        run: make checktestspecs
      - name: Run unit tests
        run: make unittests
      - name: Upload unit test coverage reports to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: testreports/coverage-unit-clover.xml
          flags: unittests
          name: RCMCardDAV unit test coverage
          fail_ci_if_error: false
      - name: Upload DB interoperability test coverage reports to codecov.io
        uses: codecov/codecov-action@v1
        with:
          files: testreports/coverage-dbinterop-sqlite3-clover.xml,testreports/coverage-dbinterop-mysql-clover.xml,testreports/coverage-dbinterop-postgres-clover.xml
          flags: dbinterop
          name: RCMCardDAV database interoperability test coverage
          fail_ci_if_error: false
